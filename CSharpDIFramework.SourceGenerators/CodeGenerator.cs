using System.Text;

namespace CSharpDIFramework.SourceGenerators;

internal static class CodeGenerator
{
    /// <summary>
    /// Generates the C# source code for a given container blueprint.
    /// </summary>
    public static string Generate(ContainerBlueprint blueprint)
    {
        var sb = new StringBuilder();

        sb.AppendLine("// <auto-generated/>");
        sb.AppendLine("#nullable enable");
        sb.AppendLine();

        bool hasNamespace = !string.IsNullOrEmpty(blueprint.Namespace);
        if (hasNamespace)
        {
            sb.AppendLine($"namespace {blueprint.Namespace!};");
            sb.AppendLine();
        }

        sb.AppendLine($"public partial class {blueprint.ContainerName}");
        sb.AppendLine("{");
        // In future milestones, we will generate fields, constructors,
        // and the Resolve<T> method here.
        sb.AppendLine("}");

        return sb.ToString();
    }
}